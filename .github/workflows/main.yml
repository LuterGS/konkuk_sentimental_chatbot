name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GOOGLE_REGION }}
  SERVICE: ${{ secrets.GOOGLE_CLOUD_RUN_NAME }}
  REGION: ${{ secrets.GOOGLE_REGION }}
  GCP_SA_KEY: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      # actions/checkout MUST come before auth
      - uses: 'actions/checkout@v3'

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}


      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v2'
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/sentimental_webserver:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/sentimental_webserver:${{ github.sha }}"
      # END - Docker auth and build

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: Tag latest to image
        run: |-
          gcloud artifacts docker tags add "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/sentimental_webserver:${{ github.sha }}" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/sentimental_webserver:latest"

      - name: Deploy to Cloud Run
        id: deploy
        run: |-
          gcloud run deploy fastapi-webservice --image="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/sentimental_webserver:latest" --vpc-connector=out-connector --vpc-egress=all-traffic

#        uses: google-github-actions/deploy-cloudrun@v0
#        with:
#          service: ${{ env.SERVICE }}
#          region: ${{ env.REGION }}
#          # NOTE: If using a pre-built image, update the image name here
#          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/sentimental_webserver:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
